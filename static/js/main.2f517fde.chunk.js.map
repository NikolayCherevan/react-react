{"version":3,"sources":["Containers/Content/Content.jsx","Constants/routes.js","Containers/Dashboard/AboutMe.jsx","Containers/Dashboard/Flows.jsx","Components/Overview.jsx","Components/Counters.jsx","Components/Projects.jsx","Components/EventsList.jsx","Components/Events.jsx","Containers/Dashboard/Home.jsx","Containers/Dashboard/CreateFlow.jsx","Containers/Dashboard/Settings.jsx","Containers/Dashboard/NotFound.jsx","App.js","serviceWorker.js","index.js"],"names":["Content","Layout","Header","Footer","Sider","SiderDemo","Menu","SubMenu","state","collapsed","onCollapse","console","log","setState","style","minHeight","collapsible","this","className","theme","defaultSelectedKeys","mode","Item","key","shape","icon","to","diceD6","baselineBallot","layerGroup","bxsCog","margin","props","children","textAlign","React","Component","AboutMe","padding","Flows","Overview","type","percent","Count","background","gutter","span","bordered","bezierCurve","usersAlt","bxBullseye","Projects","plusOutlined","grid","column","dataSource","title","renderItem","item","baselineHourglassEmpty","EventsList","Date","events","eventsL","length","i","size","keke","Events","Search","Input","Home","placeholder","onSearch","value","width","Settings","NotFound","history","createBrowserHistory","App","exact","path","render","CreateFlow","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f517fde.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"antd/dist/antd.css\";\nimport { Layout, Menu} from 'antd';\nimport \"./style.scss\";\nimport * as path from \"../../Constants/routes\";\nimport { Icon, InlineIcon } from '@iconify/react';\nimport diceD6 from '@iconify/icons-fa-solid/dice-d6';\nimport bxsCog from '@iconify/icons-bx/bxs-cog';\nimport layerGroup from '@iconify/icons-uil/layer-group';\nimport baselineBallot from '@iconify/icons-ic/baseline-ballot';\nimport {Link  } from \"react-router-dom\";\nimport { Avatar } from 'antd';\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\n\n\n\nclass SiderDemo extends React.Component {\n  state = {\n    collapsed: true,\n  };\n\n  onCollapse = collapsed => {\n    console.log(collapsed);\n    this.setState({ collapsed });\n  };\n\n  render() {\n\n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        <Sider collapsible collapsed={this.state.collapsed} >\n          <div className=\"logo\" />\n          <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n          <Menu.Item key=\"0\">\n          <Avatar shape=\"square\" icon=\"user\" />\n       \n              <Link to = {path.ABOUT}> </Link>\n            </Menu.Item>\n            <Menu.Item key=\"1\">\n            <Icon icon={diceD6} />\n      \n              <Link to = {path.HOME}> </Link> \n            </Menu.Item>\n            <Menu.Item key=\"2\">\n            <Icon icon={baselineBallot} />\n   \n              <Link to = {path.CREATEFLOW}> </Link>\n            </Menu.Item>\n            <Menu.Item key=\"9\">\n            <Icon icon={layerGroup} />\n         \n              <Link to = {path.FLOWS}> </Link>\n            </Menu.Item>\n            <Menu.Item key=\"10\">\n            <Icon icon={bxsCog} />\n        \n              <Link to = {path.SETTINGS}> </Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Content style={{ margin: '0 16px' }}>\n            {this.props.children}\n           \n          </Content>\n          <Footer style={{ textAlign: 'center' }}></Footer>\n        </Layout>\n      </Layout>\n    );\n  }\n}\nexport default SiderDemo;\n","export const ABOUT = '/about-me';\nexport const FLOWS = '/flows';\nexport const CREATEFLOW = \"/create-flow\";\nexport const SETTINGS = '/settings';\nexport const HOME = \"/\";\n","import React from 'react';\n\n\n\n\nconst AboutMe = () => {\n    return ( \n        <section className= 'about-section'> \n           <div style={{ padding: 24, minHeight: 360 }}>\n            Front-end developer <br/>\n</div>\n         </section>\n    )\n}\n\nexport default AboutMe;","import React from 'react';\n\nimport Slider from \"react-slick\";\n\nconst Flows = () => {\n    return ( \n        <div className=\"main-title\">\n        <div style={{ padding: 24, minHeight: 360 }}>\n     Flows\n    </div>\n  </div>\n        \n    )\n}\n\nexport default Flows;","import React from \"react\";\nimport { Progress } from 'antd';\n\n\n\nconst Overview = () => {\n    return (\n        <section className=\"wrapper\">\n    <div className='overviews-section'>\n        <h1 className=\"Overview-title\"> Overview </h1>\n        <div className=\"Overview-subtitle\"> Overview </div>\n        <Progress type=\"circle\" percent={30} />\n        \n         </div>\n         </section>\n    )\n}\n\n\n\n\nexport default Overview;","import React from \"react\";\nimport { Icon, InlineIcon } from '@iconify/react';\nimport bezierCurve from '@iconify/icons-fa-solid/bezier-curve';\nimport layerGroup from '@iconify/icons-uil/layer-group';\nimport bxBullseye from '@iconify/icons-bx/bx-bullseye';\nimport usersAlt from '@iconify/icons-uil/users-alt';\nimport { Row, Col } from 'antd';\n\nimport { Card } from 'antd';\n\nconst Count = () => {\n    return (\n        <section className=\"wrapper\">\n        <div className='card-wrapper' style={{ background: '#ECECEC', padding: '30px' }}>\n        <Row gutter={16}>\n          <Col span={6}>\n            <Card  bordered={false}>\n            <Icon icon={layerGroup} />\n            <div className='count-name'> Projects </div>\n            <div className='count-number'> 22</div>\n            </Card>\n          </Col>\n          <Col span={6}>\n            <Card bordered={false}>\n            <Icon icon={bezierCurve} />\n            <div className='count-name'> Flows </div>\n            <div className='count-number'> 31</div>\n\n            </Card>\n          </Col>\n          <Col span={6}>\n            <Card bordered={false}>\n            <Icon icon={usersAlt} />\n            <div className='count-name'> Invitees </div>\n            <div className='count-number'> 14</div>\n            </Card>\n          </Col>\n          <Col span={6}>\n            <Card bordered={false}>\n              <Icon icon={bxBullseye} />\n              <div className='count-name'> Goals </div>\n            <div className='count-number'> 12</div>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n\n      </section>\n    )\n}\n\n\n\n\nexport default Count;","import React from \"react\";\nimport { List, Card } from 'antd';\nimport 'antd/dist/antd.css';\nimport { Icon, InlineIcon } from '@iconify/react';\nimport plusOutlined from '@iconify/icons-ant-design/plus-outlined';\nimport baselineHourglassEmpty from '@iconify/icons-ic/baseline-hourglass-empty';\nconst Projects = () => {\n    const projects = [\n        {\n          title: '',\n        },\n        {\n          title: '',\n        },\n        {\n          title: '',\n        },\n        {\n          title: '',\n        },\n        \n      ]\n    return (\n        <section className=\"wrapper\">\n    <div className='overviews-section'>\n<div className=\"title-wrapper\"> \n<div className=\"title\"> Projects </div>\n<div className=\"subtitle\"> View all</div></div>\n<div className='projects-wrapper'> \n<Card className='adding-project-card'> <Icon icon={plusOutlined} /></Card>\n<List\n    grid={{ gutter: 16, column: 4 }}\n    dataSource={projects}\n    renderItem={item => (\n      <List.Item>\n        <Card >{item.title} <Icon icon={baselineHourglassEmpty} /></Card>\n      </List.Item>\n    )}\n  />\n  </div>\n         </div>\n         </section>\n    )\n}\n\n\n\n\nexport default Projects;","import React from \"react\";\nimport { Avatar } from \"antd\";\nimport Moment from \"react-moment\";\n\nconst EventsList = () => {\n  let newDate = new Date();\n  const format = \"DD . MM\";\n  const dateToFormat = \"DD . MM\";\n  let events = [\n      'Start working',\n      'Drop project',\n      'Leave copmpany'\n  ]\n  let eventsL = events.length;\n  function keke () {\n    for (let i = 0; i < eventsL; i++) { \n        return (\n            <section>\n            <div className=\"wrapper-events\">\n              <div className=\"avatar-name-wrapp\">\n                {\" \"}\n                <Avatar shape=\"square\" size=\"small\" icon=\"user\" />{\" \"}\n                <span className=\"username\"> Jessica </span>\n              </div>{\" \"}\n              <div className=\"date-wrapper\">\n                {\" \"}\n                <span className=\"data\">\n                  {\" \"}\n                  <Moment> </Moment>\n                </span>{\" \"}\n                <span className=\"data2\">\n                  {\" \"}\n                  <Moment>}</Moment>\n                </span>\n              </div>\n            </div>\n            <div className=\"event-desc\"> {events}</div>\n          </section>\n        )\n      }\n  }\n  \n \n     \n     \n\n  return (\n      <div> {keke()}</div>\n  \n  );\n};\nexport default EventsList;\n","import React from \"react\";\nimport { Avatar } from \"antd\";\nimport Moment from \"react-moment\";\nimport EventsList from \"./EventsList\"\nconst Events = () => {\n  let newDate = new Date();\n  const format = \"DD . MM\";\n  const dateToFormat = \"DD . MM\";\n  return (\n    <section>\n      <div className=\"wrapper-event\">\n        <div className=\"card-wrapper\">\n        \n          <div className=\"card-boody\">\n            <EventsList />\n          \n             </div>\n        </div>\n      </div>\n    </section>\n  );\n};\nexport default Events;\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\n\nimport { Input } from \"antd\";\nimport Overview from \"./../../Components/Overview\";\nimport Count from \"./../../Components/Counters\";\nimport Projects from \"./../../Components/Projects\";\nimport Events from \"../../Components/Events\";\nconst { Search } = Input;\n\nconst Home = () => {\n  return (\n    <div className=\"home-section\">\n      <div className=\"main-title\">      </div>\n        <div style={{ padding: 24, minHeight: 360 }}>\n          <Row className='home-row'>\n            <Col className=\"wrapper1\" span={8}>\n              <h1 className=\"user-name\"> Jessica</h1>\n              <h1 className=\"username-under\"> Individual </h1>\n              <Search\n                placeholder=\"Search\"\n                onSearch={value => console.log(value)}\n                style={{ width: 200 }}\n              />\n              <Count /> <br />\n              <Overview />\n            </Col>\n\n            <Col className=\"wrapper2\" span={8}>\n              {\" \"}\n              <Projects />\n              <Events />\n            </Col>\n            <Col span={8}>col-8</Col>\n          </Row>\n        </div>\n\n    </div>\n  );\n};\n\nexport default Home;\n\n","import React from 'react';\n\n\n\n\nconst Projects = () => {\n    return ( \n        <section className= 'about-section'> \n          <div style={{ padding: 24, minHeight: 360 }}>\n          refrferf\n          </div>\n         </section>\n    )\n}\n\nexport default Projects;","import React from 'react';\n\n\n\n\nconst Settings = () => {\n    return ( \n        <section className= 'rev-section'> \n        <div style={{ padding: 24, minHeight: 360 }}> cool </div>\n         </section>\n    )\n}\n\nexport default Settings;","import React from 'react';\n\nconst NotFound = () => {\n    return (\n        <section className=\"not-found-section\">\n      \n            <h1 className = \"sorry-message\"> Sorry, page not  found\n </h1> \n           \n        </section>\n    );\n};\nexport default NotFound;","import React from \"react\";\nimport \"./App.css\";\n\nimport { Route, Router} from \"react-router-dom\";\nimport SiderDemo from \"./Containers/Content/Content\";\nimport AboutMe from \"./Containers/Dashboard/AboutMe\";\nimport Flows from \"./Containers/Dashboard/Flows\";\nimport Home from \"./Containers/Dashboard/Home\";\nimport CreateFlow from \"./Containers/Dashboard/CreateFlow\";\nimport Settings from \"./Containers/Dashboard/Settings\";\n\nimport * as path from \"../../react-react/src/Constants/routes\";\nimport NotFound from \"./Containers/Dashboard/NotFound\";\nimport { Switch} from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nexport const history =  createBrowserHistory(); \n\nconst App = () => {\n\n  return (\n    <Router  history={history} >\n\n        <SiderDemo>\n          <Switch>\n            <Route exact={true} path={path.HOME} render={Home} />\n            <Route exact={true} path={path.ABOUT} render={AboutMe} />\n            <Route exact={true} path={path.FLOWS} render={Flows} />\n            <Route exact={true} path={path.CREATEFLOW} render={CreateFlow} />\n            <Route exact={true} path={path.SETTINGS} render={Settings} />\n            <Route exact={true} component={NotFound} />\n          </Switch>\n        </SiderDemo>\n\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}